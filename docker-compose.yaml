# services:
#   reservations:
#     build:
#       context: .
#       dockerfile: ./apps/reservations/Dockerfile
#       target: development
#     command: npm run start:dev reservations
#     env_file:
#       - ./apps/reservations/.env
#     ports:
#       - '3000:3000'
#     volumes:
#       - .:/usr/src/app
#     restart: 'always'

#   auth:
#     build:
#       context: .
#       dockerfile: ./apps/auth/Dockerfile
#       target: development
#     command: npm run start:dev auth
#     env_file:
#       - ./apps/auth/.env
#     ports:
#       - '3001:3001'
#     volumes:
#       - .:/usr/src/app
#     restart: 'always'

#   payments:
#     build:
#       context: .
#       dockerfile: ./apps/payments/Dockerfile
#       target: development
#     command: npm run start:dev payments
#     env_file:
#       - ./apps/payments/.env
#     ports:
#       - '3003:3003'
#       - '3004:3004'
#     volumes:
#       - .:/usr/src/app
#     restart: 'always'

#   mongo:
#     image: mongo

###############################################################################################
version: '3.8'

networks:
  sleepr-network:
    driver: bridge

services:
  reservations:
    build:
      context: .
      dockerfile: ./apps/reservations/Dockerfile
      target: development
    command: npm run start:dev reservations
    env_file:
      - ./apps/reservations/.env
    ports:
      - '3000:3000'
      - '9229:9229'
    volumes:
      - .:/usr/src/app
    networks:
      - sleepr-network
    depends_on:
      - auth
      - payments
    restart: always

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    ports:
      - '3001:3001' # HTTP port
      - '3002:3002' # TCP microservice port
    volumes:
      - .:/usr/src/app
    networks:
      - sleepr-network
    depends_on:
      - rabbitmq # <-- Add this
    restart: always

  payments:
    build:
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: development
    command: npm run start:dev payments
    env_file:
      - ./apps/payments/.env
    volumes:
      - .:/usr/src/app
    networks:
      - sleepr-network
    restart: always

  notifications:
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    command: npm run start:dev notifications
    env_file:
      - ./apps/notifications/.env
    volumes:
      - .:/usr/src/app
    networks:
      - sleepr-network
    restart: always

  mongo:
    image: mongo
    networks:
      - sleepr-network
    volumes:
      - mongo_data:/data/db
    restart: always
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672' # RabbitMQ default port
    networks:
    - sleepr-network
    restart: always

volumes:
  mongo_data:
